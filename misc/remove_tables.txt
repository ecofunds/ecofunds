
'''
drop table wp_commentmeta;
drop table wp_comments;
drop table wp_easymail_recipients;
drop table wp_easymail_stats;
drop table wp_easymail_subscribers;
drop table wp_easymail_unsubscribed;
drop table wp_email;
drop table wp_links;
drop table wp_options;
drop table wp_post_notification_cats;
drop table wp_post_notification_emails;
drop table wp_post_notification_posts;
drop table wp_postmeta;
drop table wp_posts;
drop table wp_term_relationships;
drop table wp_term_taxonomy;
drop table wp_terms;
drop table wp_tn3_documents;
drop table wp_tn3_relations;
drop table wp_usermeta;
drop table wp_users;
drop table wp_wysija_campaign;
drop table wp_wysija_campaign_list;
drop table wp_wysija_email;
drop table wp_wysija_email_user_stat;
drop table wp_wysija_email_user_url;
drop table wp_wysija_list;
drop table wp_wysija_queue;
drop table wp_wysija_url;
drop table wp_wysija_url_mail;
drop table wp_wysija_user;
drop table wp_wysija_user_field;
drop table wp_wysija_user_history;
drop table wp_wysija_user_list;
drop table z_locatizacoes;
'''

'''
drop table ecofunds_uicn_catalog;
drop table ecofunds_currency_exchange_rate;
drop table ecofunds_currency_def_exchange_rate;
drop table ecofunds_entity_geopoints;
drop table ecofunds_entity_geographicfocus;
drop table ecofunds_geographic_focus;
drop table ecofunds_geopoints;
'''

class Geopoint(models.Model):
    geopoint_id = models.BigIntegerField(primary_key=True)

    #location = models.PointField() #PointField() # This field type is a guess.

    location_lat = models.DecimalField(blank=True, max_digits=18, decimal_places=16)
    location_lng = models.DecimalField(blank=True, max_digits=18, decimal_places=16)

    description = models.CharField(max_length=1524, blank=True)
    class Meta:
        db_table = u'ecofunds_geopoints'

class ProjectGeopoint(models.Model):
    entity = models.ForeignKey(Project, primary_key=True)
    geopoint = models.ForeignKey(Geopoint)
    class Meta:
        db_table = u'ecofunds_entity_geopoints'
        unique_together = ('entity','geopoint')

class ProjectGeographicfocus(models.Model):
    entity = models.ForeignKey(Project, primary_key=True)
    geographic_focus = models.ForeignKey(GeographicFocus)
    class Meta:
        db_table = u'ecofunds_entity_geographicfocus'
        unique_together=('entity','geographic_focus')

class GeographicFocus(models.Model):
    id = models.BigIntegerField(primary_key=True)
    country = models.CharField(max_length=150, blank=True)
    class Meta:
        db_table = u'ecofunds_geographic_focus'

class CurrencyDefExchangeRate(models.Model):
    id = models.BigIntegerField(primary_key=True)
    currency = models.ForeignKey(Currency, null=True, blank=True)
    grant_year = models.IntegerField()
    rate = models.DecimalField(null=True, max_digits=20, decimal_places=9, blank=True)
    region = models.CharField(max_length=765)
    class Meta:
        db_table = u'ecofunds_currency_def_exchange_rate'

class CurrencyExchangeRate(models.Model):
    currency_exchange_rate_id = models.BigIntegerField(primary_key=True)
    currency_source = models.ForeignKey(Currency, null=True, blank=True, related_name='+')
    currency_target = models.ForeignKey(Currency, null=True, blank=True, related_name='+')
    grant_year = models.IntegerField()
    rate = models.DecimalField(null=True, max_digits=20, decimal_places=9, blank=True)
    region = models.CharField(max_length=765)
    class Meta:
        db_table = u'ecofunds_currency_exchange_rate'

class UicnCatalog(models.Model):
    id = models.BigIntegerField(primary_key=True)
    name = models.CharField(max_length=765)
    class Meta:
        db_table = u'ecofunds_uicn_catalog'
